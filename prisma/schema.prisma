// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid()) @unique
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole @default(USER)
  accounts      Account[]
  isTwoFactorEnabled Boolean @default(false)
  twoFactorConfirmation TwoFactorConfirmation?
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id String @id @default(cuid()) 
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id String @id @default(cuid())

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}

model Invoice {
  id String @id @default(cuid())
  cusName String?
  cusComp String?
  cusPhone String?
  cusEmail String?
  cusAddr String?
  invNo String?
  invPo String?
  invTitle String?
  invDate String?
  invBus String?
  invStatus String?
  invStaff String?
  invNote String?
  items Json?
  partial Float?
  method String?
  discount Float?
  total Float?
  balance Float?
  noti Boolean @default(true)
  deletedAt Boolean @default(false)
}

model Receipt {
  id String @id @default(cuid())
  recFrom String?
  date String?
  payOf String?
  check String?
  usd String?
  recNo String?
  noti Boolean @default(true)
  deletedAt Boolean @default(false)
}

model Business {
  id String @id @default(cuid()) @unique
  busName String?
  busEmail String
  busType String
  busAddr String?
  busPhone1 String?
  busPhone2 String?
  busTelegram String?
  busDes String?
  busInvkh String?
  busInvEng String?
  busBankName String?
  busBankNumber String?
  busBankDes String?
  busPayTerm String?
  abaQr String?
  signature String?
  busLogo String?
  Rec1 String?
  Rec2 String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Emp {
  id String @id @default( cuid()) @unique
  empName String?
  empId String?
  empPhone String?
  empNational String?
  empAssc String?
  empAddr String?
  empCard String?
  empTelegram String?
  empGender String
  empOcc String?
  memberSince String?
  creatdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id String @id @default(cuid()) @unique
  cusName String
  cusTelegram String?
  cusBus String?
  cusPhone1 String?
  cusPhone2 String?
  cusComp String?
  cusMember String
  cusEmail String?
  cusAddr String?
  cusWebsite String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(cuid()) @unique
  prodItemName String
  prodUnitPrice Float
  prodBus String
  prodSince String
  proditemDes String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Purchase {
  id String @id @default(cuid()) @unique
  purName String
  purPrice Float
  purBus String
  purSince String
  purDes String?
  purInvN String
  purSupp String?
  image1 String?
  image2 String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}